// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

import (
	"time"
)

type Comment struct {
	ID        string     `json:"id" db:"id"`
	PostID    *string    `json:"postId,omitempty" db:"postId"`
	CommentID *string    `json:"commentId,omitempty" db:"commentId"`
	CreatedAt time.Time  `json:"createdAt" db:"createdAt"`
	Comment   string     `json:"comment" db:"comment"`
	Comments  []*Comment `json:"comments,omitempty" db:"comments"`
}

type CommentInput struct {
	Comment string `json:"comment" db:"comment"`
}

type CommentResponse struct {
	Message string   `json:"message" db:"message"`
	Status  int      `json:"status" db:"status"`
	Data    *Comment `json:"data,omitempty" db:"data"`
}

type Mutation struct {
}

type Post struct {
	ID             string     `json:"id" db:"id"`
	Title          string     `json:"title" gorm:"unique" db:"title"`
	Text           string     `json:"text" db:"text"`
	CreatedAt      time.Time  `json:"createdAt" db:"createdAt"`
	CanBeCommented bool       `json:"canBeCommented" db:"canBeCommented"`
	Comments       []*Comment `json:"comments,omitempty" db:"comments"`
}

type PostInput struct {
	Title          string `json:"title" gorm:"unique" db:"title"`
	Text           string `json:"text" db:"text"`
	CanBeCommented bool   `json:"canBeCommented" db:"canBeCommented"`
}

type PostResponse struct {
	Message  string  `json:"message" db:"message"`
	Status   int     `json:"status" db:"status"`
	Data     *Post   `json:"data,omitempty" db:"data"`
	DataList []*Post `json:"dataList,omitempty" db:"dataList"`
}

type Query struct {
}
